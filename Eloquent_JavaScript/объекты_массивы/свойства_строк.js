// Добавить к строке новое свойство не получится

let kim = 'Kim';
kim.age = 88;
console.log(kim.age);

// slice and indexOf подобны одноименным методам для массивов

console.log('кокосы'.slice(3));

// indexOf для строки может искать более одного символа, в отличии от indexOf для массивов
console.log('кокос'.indexOf('с'));

console.log('один два три'.indexOf('ри'));

// Метод trim удаляет пробельные символы(пробелы, символы перевода строки, табуляции и аналогичные символы)
console.log('    okey \n');
console.log('    okey \n'.trim());

// padStart - принимает в качестве аргументов желаемую длину и символ заполнения
console.log(String(6).padStart(3,0));

/* С помощью функции split можно разделить строку на части в местах, где 
встречаются заданные фрагменты, а затем снова ее соединить с помощью 
функции joiп */

let sentence = 'Птицы-секретари умеют громко топать';
let words = sentence.split(' ');
console.log(words);
console.log(words.join(". "));

/* С помощью метода repeat можно повторить строку несколько раз - будет 
создана новая строка, содержащая несколько склеенных вместе копий исходной строки.*/

console.log("LA".repeat(3));

/*Нам уже встречалось свойство leпgth для строк. Доступ к отдельным символам в строке осуществляется так же, 
как доступ к элементам массива (с оговоркой, которую мы обсудим в главе 5).*/

let string = 'abc';
console.log(string.length);
console.log(string[1]);